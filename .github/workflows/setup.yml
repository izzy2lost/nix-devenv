name: Android Build with Termux

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Verify Nix Installation
        run: nix --version

      - name: Install Cachix
        run: nix-env -iA cachix -f https://cachix.org/api/v1/install

      - name: Configure Nix for Trusted Users
        run: |
          echo "trusted-users = root ${USER}" | sudo tee -a /etc/nix/nix.conf
          sudo pkill nix-daemon
          
      - name: Use Devenv Cache from Cachix
        run: cachix use devenv

      - name: Install Devenv
        run: nix-env -iA devenv -f https://github.com/NixOS/nixpkgs/tarball/nixpkgs-unstable

      - name: Initialize Devenv Environment
        run: devenv init

      - name: Download Termux APK
        run: wget https://f-droid.org/repo/com.termux_1020.apk -O termux.apk

      - name: Accept Android SDK Licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
      - name: Set Up Android Emulator with Nix
        run: |
          echo 'with import <nixpkgs> {
            config = {
              android_sdk.accept_license = true;
              allowUnfree = true;
            };
          };
          
          let
            androidComposition = androidenv.composeAndroidPackages {
              cmdLineToolsVersion = "8.0";
              toolsVersion = "26.1.1";
              platformToolsVersion = "30.0.5";
              buildToolsVersions = [ "30.0.3" ];
              includeEmulator = true;
              emulatorVersion = "30.3.4";
              platformVersions = [ "28" "29" "30" ];
              includeSources = false;
              includeSystemImages = true;
              systemImageTypes = [ "default" ];
              abiVersions = [ "${{ matrix.abi }}" ];
              cmakeVersions = [ "3.10.2" ];
              includeNDK = true;
              ndkVersions = ["22.0.7026061"];
              useGoogleAPIs = false;
              useGoogleTVAddOns = false;
              includeExtras = [
                "extras;google;gcm"
              ];
            };
          in
          androidComposition.androidsdk' > android-emulator.nix

          nix-build android-emulator.nix
          
      - name: Start Android Emulator
        run: |
          nohup emulator -avd test_emulator -no-audio -no-window -gpu off &

      - name: Wait for Emulator to Start
        run: |
          until adb shell getprop sys.boot_completed | grep -m 1 "1"; do
            echo "Waiting for emulator to fully boot..."
            sleep 5
          done
          echo "Emulator is ready!"

      - name: Install Termux APK on Emulator
        run: adb install termux.apk

      - name: Launch Termux and Set Up Storage
        run: |
          adb shell am start -n com.termux/.app.TermuxActivity
          sleep 5
          adb shell "su -c 'termux-setup-storage'"
          sleep 5

      - name: Copy baserom.us.z64 to Termux Home Directory
        run: adb push baserom.us.z64 /data/data/com.termux/files/home/

      - name: Push myscript.sh to Termux Home Directory
        run: adb push myscript.sh /data/data/com.termux/files/home/

      - name: Run myscript.sh in Termux
        run: adb shell "su -c 'bash /data/data/com.termux/files/home/myscript.sh'"

      - name: Wait for APK Build to Complete
        run: |
          echo "Waiting for APK build to complete..."
          timeout=1800  # 30 minutes max
          elapsed=0
          while [ $elapsed -lt $timeout ]; do
            if adb shell test -f "/data/data/com.termux/files/home/build/us_pc/sm64coopdx.apk"; then
              echo "Build complete! APK found."
              exit 0
            fi
            echo "Still building... waiting 30 seconds."
            sleep 60
            elapsed=$((elapsed + 60))
          done
          echo "Build timed out after 30 minutes!"
          exit 1  # Fail if it takes too long

      - name: Pull APK from Termux
        run: adb pull /data/data/com.termux/files/home/build/us_pc/sm64coopdx.apk sm64coopdx-${{ matrix.abi }}.apk

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sm64coopdx-${{ matrix.abi }}
          path: sm64coopdx-${{ matrix.abi }}.apk
